#! /usr/bin/perl

use MP3::Tag;
use JSON;
use Unicode::String;

$output = "output";
$json = new JSON(pretty => 1, indent => 4);

%mapping = (
    'TIT1' => 'GROUP',
    'TIT2' => 'TITLE',
    'TIT3' => 'SUBTITLE',
    'TPE1' => 'ARTIST',
    'TPE2' => 'BAND',
    'TPE3' => 'CONDUCTOR',
    'TALB' => 'ALBUM',
    'TYER' => 'YEAR',
    'COMM' => 'COMMENT',
    'TRCK' => 'TRACKNUMBER',
    'TCON' => 'GENRE',
    'TPUB' => 'LABEL',
    'TCOM' => 'COMPOSER',
    'TCON' => 'GENRE',
    'TPOS' => 'DISKNUMBER',
    'TCMP' => 'COMPILATION'
);

%obj = ();

@tracks = ();
foreach $file (@ARGV) {
    my $mp3 = MP3::Tag->new($file)      || return "Could not read $file\n";
    $mp3->get_tags()                    || return "Could not get tags in $file\n";

    my $id3v2 = $mp3->{ID3v2};
    next unless defined $id3v2;

    $frameIDs_hash = $id3v2->get_frame_ids('truename');
    $track = {};

    foreach my $frame (keys %$frameIDs_hash) {
	next unless defined $mapping{$frame};
	my ($name, @info) = $id3v2->get_frame($frame);
	for my $info (@info) {
	    if (ref $info) {
	 	#print "$name ($frame):\n";
		#while(my ($key,$val)=each %$info) {
		#    print " * $key => $val\n";
		#}
	    } else {
		# print "$frame: $name: $info\n";
		$track->{$mapping{$frame}} = Unicode::String::latin1($name)->utf8();
	    }
	}
    }
    push @tracks, $track;
}

findCommon(\%obj, @tracks);

@tracks = sort {$a->{TRACKNUMBER} <=> $b->{TRACKNUMBER}} @tracks;
$obj{tracks} = \@tracks;
print $json->objToJson(\%obj), "\n";

sub findCommon {
    my $obj = shift;
    my @tracks = @_;
    my $numTracks = @tracks;
    my $protoTrack = $tracks[0];
    foreach my $key (keys %$protoTrack) {
	#print "Checking $key for commonality\n";
	#print $protoTrack, " ", $protoTrack->{$key}, "\n";
	my $value = $protoTrack->{$key};
	my $common = 1;
	foreach $track (@tracks) {
	    $common = 0 unless ($track->{$key} eq $value);
	}
	if ($common) {
	    #print "$key is common\n";
	    $obj->{$key} = $value;
	    foreach $track (@tracks) {
		delete $track->{$key};
	    }
	}
    }
}
