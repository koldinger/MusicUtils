#! /usr/bin/perl
# Copyright Eric Koldinger, 2006
# kolding @ koldware.com
# No warranty, expressed, or implied, if you use this program.  Author is not responsible for any
# damage it may do to your files or sanity.

use strict;
use File::Spec;
use File::Basename;
use Getopt::Long;
use String::LCSS;

# Set up options processing

my $base;
my $series = 1;
my $first  = 1;
my $rename = 1;
my $help   = 0;

my $result = GetOptions(
			 "base=s"		=>  \$base,
			 "series=i"		=>	\$series,
			 "first=i"		=> 	\$first,
			 "rename!"		=>  \$rename,
             "help"         =>  \$help
             );

if (!$result)
{
    print "Invalid options\n";
}

if ($help || !$result) {
    usage();
    exit;
}


map { print basename($_), "  " } @ARGV  ;
if (!$base)  {
	$base = trim(LCP(map { basename($_) } @ARGV));
}
print "$base\n";

## Now, parse the various files
my $episode = $first;


foreach my $file (@ARGV)
{
	my ($name, $dir, $suffix) = fileparse($file, '\..*');
	# print "$name :: $dir :: $suffix\n";
	my $basename;
	if ($base) { $basename = $base } else {$base = $name};

	my $identifier = sprintf("s%02de%02d", $series, $episode++);
	my $target = "$dir/$base-$identifier$suffix";

	print "$file  ->  $target\n";
	if ($rename) {
		rename $file, $target || die "Could not rename $file to $target";
	}
}

sub LCP {
    return '' unless @_;
	return $_[0] if @_ == 1;
	my $i          = 0;
	my $first      = shift;
	my $min_length = length($first);
	foreach (@_) {
		$min_length = length($_) if length($_) < $min_length;
	}
INDEX: foreach my $ch ( split //, $first ) {
		last INDEX unless $i < $min_length;
		foreach my $string (@_) {
			last INDEX if substr($string, $i, 1) ne $ch;
		}
	}
	continue { $i++ }
	return substr $first, 0, $i;
}

sub trim {
	my $string = shift;
	$string =~ s/^\s+//;
	$string =~ s/\s+$//;
	return $string;
}

sub usage {
    print <DATA>;
}

__DATA__
    -b path --base=path Create Targets in path.  Must be in the same filesystem as originals.
    -s  number --series number
	-f  number --first number
	-[no]rename
    -h  --help      This screen.
