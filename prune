#! /usr/bin/perl

use File::Spec;
use File::Path;
use Getopt::Long;

@deleteable      = ();

$result = GetOptions(
                     "delete=s"   =>      \@deleteable,
                     );

push @ARGV, "." if (@ARGV == 0);

makeHash(@deleteable);

foreach $i (@ARGV) {
    $dirSize = prune($i) if (-d $i);
    if ($dirSize == 0 && $i ne ".") { rmtree($i); }
}

sub prune {
    my $dir = shift;
    return 1 unless (-d $dir);
    opendir DIR, $dir || return 1;
    my @files = File::Spec->no_upwards(readdir DIR);
    closedir DIR;

    my $numFiles = @files;
    print "Pruning $dir\n";

    if ($numFiles == 0) { return 0; }
    foreach my $file (@files) {
	my $path = File::Spec->join($dir, $file);
	if (-d $path) {
	    if (prune ($path) == 0) {
		print "Deleting empty directory: $path\n";
		rmtree($path);
		$numFiles --;
	    }
	}
    }
    # Count the number of files left which can be deleted.
    my $numDelete = countDeletable(@files);
    # Match it with what's there.
    return ($numFiles - $numDelete);
}

sub countDeletable {
    my $count = 0;
    foreach my $file (@_) {
	$count ++ if (exists $delete{$file});
    }
    return $count;
}

sub makeHash {
    foreach my $file (@_) {
	$delete{$file} = 1;
    }
}
